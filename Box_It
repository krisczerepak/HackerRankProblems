//https://www.hackerrank.com/challenges/box-it/problem?isFullScreen=true&h_r=next-challenge&h_v=zen
#include<iostream>
using namespace std;

class Box {
public:
	int l = 0;
	int h = 0;
	int b = 0;
	Box(); //Constructor
	Box(int, int, int);
	Box(Box& B);
	int getLength();
	int getBreadth();
	int getHeight();
	int CalculateVolume();
	friend bool operator<(Box& a, Box& b) {
		std::cout << "HAHA";
		return true;
	}
};
Box::Box(void) {
	//l, b, h = 0;
	l = 0;
	b = 0;
	h = 0;
}
Box::Box(int length, int breadth, int height) {
	l = length;
	h = height;
	b = breadth;
}
Box::Box(Box& B) {
	l = B.l;
	h = B.h;
	b = B.b;
}
int Box::getLength() {
	return l;
};
int Box::getBreadth() {
	return b;
}
int Box::getHeight() {
	return h;
}
int Box::CalculateVolume() {
	return (l * h * b);
}

//Implement the class Box  
//l,b,h are integers representing the dimensions of the box

// The class should have the following functions : 

// Constructors: 
// Box();
// Box(int,int,int);
// Box(Box);


// int getLength(); // Return box's length
// int getBreadth (); // Return box's breadth
// int getHeight ();  //Return box's height
// long long CalculateVolume(); // Return the volume of the box

//Overload operator < as specified
//bool operator<(Box& b)

//Overload operator << as specified
//ostream& operator<<(ostream& out, Box& B)

int main()
{
	//Box boxed_lunch(1, 2, 3);
	return 0;
}
